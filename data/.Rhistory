0.03021929875984941,
0.016111559867179173,
0.012677958864049951,
0.0231521620409138,
0.03314257257969466,
0.0331675644187793,
0.027065081834388646,
0.015318454652770794,
0.019434394571155467,
0.023633332078599027,
0.02044764394836501,
0.020492999508185294,
0.011649282425677048,
0.017521593257510355,
0.014187188257661541,
0.016310414685574898,
0.01886328476688785,
0.024491230949893524,
0.025412689313181067,
0.0235055960121664,
0.01935540801799906,
0.021174104258547675,
0.029547913058019945,
0.02703654177123643,
0.02250345411899448,
0.017267509560149802,
0.025407444112385526,
0.03304260522335608,
0.023491865927731007,
0.014350715105993166,
0.023013009949220287,
0.022196918413678497,
0.02936695363057372,
0.029375901326048472,
0.022809372741863922,
0.015964077162457443,
0.023283446331414,
0.020040986616098818,
0.02555230421670948,
0.013672232956028558,
0.012559324763703703,
0.026787549004059788,
0.0259191597311742,
0.01205547694610834,
0.030432346474515422,
0.02979675155458495,
0.014901769730748415,
0.03538705570835203,
0.021151426478637533,
0.029802305296603767,
0.02279348286886566,
0.014886651210808323,
0.024101851926130295,
0.013107293976226283,
0.03532519319308695,
0.028501495499309176,
0.01989921192400753,
0.0174524800234985,
0.021111933202059327,
0.01924248193028326,
0.017503697866560856,
0.018565079674600086,
0.015387722157394285,
0.018932860812734608,
0.01095120790803497,
0.020849827432893826,
0.03519961691521719,
0.024716157501655327,
0.019689403892185823,
0.029653125615154062,
0.0284038422021451,
0.020184149743694806,
0.02383866626268336,
0.012143719735962764,
0.008750537633081545,
0.021912289135214487,
0.03549149691242798,
0.01824774502646975,
0.010096857260808046,
0.030468754338860954,
0.01631442572147737,
0.029988818466068795,
0.04049001899996853,
0.014841295650988042,
0.015172360383553766,
0.012601594911291314,
0.021411218188628532,
0.011504422321353088,
0.029697709821916177,
0.0213211241514345,
0.014011936842845763,
0.02483787701423424,
0.019937471035692666,
0.03709683689708731,
0.02409444693677188,
0.02189007416713925,
0.02106796607774375,
0.02246210959507667,
0.020315896846029906,
0.019052883348585556,
0.035610285283385855,
0.022695829571701586,
0.026513872939021764,
0.016332629653650135,
0.018288472467941023,
0.021825280510253134,
0.02440591930166014,
0.029125674393978757,
0.03930414080834098,
0.033491686973821516,
0.02300128538273613,
0.03177388371328128,
0.022811841071650057,
0.02071113815303521,
0.01019065379268128,
0.027637734344772603,
0.026404957887208435,
0.014044487941900453,
0.022773273418741656,
0.018753752632627987,
0.028078176940986556,
0.009995810010188032,
0.015888793103980243,
0.021780233491656118,
0.020060424713164653,
0.026452781776814857,
0.02292893246587997,
0.011244784881973727,
0.025628513898856488,
0.02835247008847111,
0.023521331614553023,
0.021030169777893515,
0.022542793124961047,
0.030642925859395303,
0.02464457593785733,
0.015138575119606007,
0.02494247248892183,
0.024455902979829428,
0.02419657408167333,
0.02928395604151484,
0.029640012613165206,
0.026126190891986506,
0.021838239241630357,
0.015604163825516238,
0.021648640659932654,
0.04186225609044947,
0.016970847173978374,
0.012776074973048925,
0.02863401395470245,
0.018837058762910135,
0.020346596697744995,
0.017056313092823395,
0.02835740674804339,
0.020662234369147357,
0.017487653722950962,
0.023261231363338762,
0.024720631349392695,
0.023451755568706267,
0.042609388662591036,
0.017410364146522524,
0.031162200738154025,
0.020133703253690616,
0.031084756891113955,
0.027033302088392126,
0.01867877711537405,
0.018553817919950834,
0.015100007466697605,
0.015729740103385993,
0.021991738500205797,
0.02248247331581231,
0.015733751139288467,
0.015247027359584433,
0.018898149925117045,
0.024135020107631522,
0.01934892865231045,
0.023671745460895795,
0.03302486410301821
)
if (length(ILS) != length(EDA))
{
stop("length(ILS) != length(EDA)")
}
n <- length(ILS)
# SCATTER
pdf("scatter.pdf")
plot(c(rnorm(length(ILS), mean = 1, sd = 0.2), rnorm(length(EDA), mean = 5, sd = 0.2)),  c(ILS,EDA), xlim = c(0,7), xlab = "ILS                                        EDA")
dev.off()
# HISTOGRAM
nbins = 20
dataHist <- data.frame(
value=c(ILS,EDA),
type=c(rep("ILSibridoa", length(ILS)), rep("EDA",  length(EDA)))
)
fig <- ggplot(data=dataHist, aes(x=value, fill=type)) +
geom_histogram(alpha=0.65, position = 'identity', bins = nbins) +
scale_fill_manual(values=c("lightgreen", "lightpink")) +
ggplot2::xlab('fitness') +
ggplot2::ylab('frekuentzia') +
ggplot2::theme_minimal() +
labs(fill="")
ggsave("histogram.pdf", plot=fig,  width = 4, height = 2, device="pdf")
# BOXPLOT
pdf("boxplot.pdf")
boxplot(ILS, EDA, names = c("ILS", "EDA"))
dev.off()
# SIGN TEST (FOR PROBABILITY OF "ILS" > "EDA" or "EDA" > "ILS")
# Measure the number of 'non ties'
n_without_ties <- sum(sign(ILS - EDA) != 0)
# Measure the number of success
n_success <- sum(sign(ILS - EDA) == 1)
binom.test(n_success, n_without_ties, alternative = "two.sided")
# CUMULATIVE DIFFERENCE PLOT
is_minimization <- FALSE
cumulative_difference_plot(ILS, EDA,
isMinimizationProblem = is_minimization,
labelA = "ILSibridoa", labelB = "EDA", ignoreMinimumLengthCheck = TRUE)
is_minimization <- FALSE
cumulative_difference_plot(ILS, EDA,
isMinimizationProblem = is_minimization,
labelA = "ILS", labelB = "EDA", ignoreMinimumLengthCheck = TRUE)
# VIOLIN
data <- data.frame(ILS, EDA)
p <- ggplot(data, aes(x=name, y=value, fill=name)) + # fill=name allow to automatically dedicate a color for each group
geom_violin()
ata <- data.frame(
name <- c( rep("ILS",200), rep('EDA',200) ),
values <- c(ILS, EDA))
data <- data.frame(
name <- c( rep("ILS",200), rep('EDA',200) ),
values <- c(ILS, EDA))
View(data)
data <- data.frame(
name <- c( rep("ILS",201), rep('EDA',201) ),
values <- c(ILS, EDA))
p <- ggplot(data, aes(x=name, y=value, fill=name)) + # fill=name allow to automatically dedicate a color for each group
geom_violin()
print(p)
ggplot(data, aes(x=name, y=value, fill=name)) + # fill=name allow to automatically dedicate a color for each group
geom_violin()
data <- data.frame(
name <- c( rep("ILS",201), rep('EDA',201) ),
value <- c(ILS, EDA))
p <- ggplot(data, aes(x=name, y=value, fill=name)) + # fill=name allow to automatically dedicate a color for each group
geom_violin()
ggplot(data, aes(x=name, y=value, fill=name)) +
geom_violin()
data %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(name, "\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=value, fill=name)) +
geom_violin(width=1.4) +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
scale_fill_viridis(discrete = TRUE) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
data <- data.frame(
name <- c( rep("ILS",201), rep('EDA',201) ),
value <- c(ILS, EDA))
# sample size
sample_size = data %>% group_by(name) %>% summarize(num=n())
with(data , vioplot(
value[treatment=="A"] , value[treatment=="B"], value[treatment=="C"],
col=rgb(0.1,0.4,0.7,0.7) , names=c("A","B","C")
))
library(vioplot)
install.packages("vioplot")
library(vioplot)
data <- data.frame(
name <- c( rep("ILS",201), rep('EDA',201) ),
value <- c(ILS, EDA))
with(data , vioplot(
value[treatment=="A"] , value[treatment=="B"], value[treatment=="C"],
col=rgb(0.1,0.4,0.7,0.7) , names=c("A","B","C")
))
ggplot(data, aes(x=name, y=value, fill=name)) +
geom_violin()
ggplot(data, aes(x=name, y=value, fill=name)) +
geom_violin()+stat_summary(fun.y=median, geom="point", size=2, color="black")
ggplot(data, aes(x=name, y=value, fill=name)) +
geom_violin()+stat_summary(fun=median, geom="point", size=2, color="black")
ggplot(data, aes(x=name, y=value, fill=name)) +
geom_violin()+stat_summary(fun=median, geom="point", size=2, color="black")
+ stat_summary(fun.y=mean, geom="point", shape=23, size=2)
ggplot(data, aes(x=name, y=value, fill=name)) +
geom_violin()+stat_summary(fun=mean, geom="point", size=2, color="black")
ggplot(data, aes(x=name, y=value, fill=name)) +
geom_violin()+stat_summary(fun=median(), geom="point", size=2, color="black")
data <- data.frame(
name <- c( rep("ILS",201), rep('EDA',201) ),
value <- c(ILS, EDA))
ggplot(data, aes(x=name, y=value, fill=name)) +
geom_violin()+stat_summary(fun=median(), geom="point", size=2, color="black")
ggplot(data, aes(x=name, y=value, fill=name)) +
geom_violin()+stat_summary(fun=median, geom="point", size=2, color="red")
data <- data.frame(
name <- c( rep("ILS",201), rep('EDA',201) ),
value <- c(ILS, EDA))
ggplot(data, aes(x=name, y=value, fill=name)) +
geom_violin()+stat_summary(fun=median, geom="point", size=2, color="red")
data <- data.frame(
name <- c( rep("ILS",201), rep('EDA',201) ),
value <- c(ILS, EDA))
ggplot(data, aes(x=name, y=value, fill=name)) +
geom_violin()+stat_summary(fun=median, geom="point", size=2, color="black")
setwd("/home/paula/Escritorio/community detection/data")
library(RVCompare)
library(ggplot2)
csv_data <-read.csv("edaVSils_50.csv")
View(csv_data)
ILS<- csv_data['ILS']
View(ILS)
ILS<- list(csv_data['ILS'])
ILS<- list(csv_data['ILS'])
View(ILS)
ILS<- csv_data['ILS']
ILS<- csv_data$'ILS'
setwd("/home/paula/Escritorio/community detection/data")
library(RVCompare)
library(ggplot2)
csv_data <-read.csv("edaVSils_50.csv")
ILS<- csv_data$'ILS'
EDA<- csv_data$'EDA'
setwd("/home/paula/Escritorio/community detection/data/EDAvsILS_50")
if (length(ILS) != length(EDA))
{
stop("length(ILS) != length(EDA)")
}
n <- length(ILS)
# SCATTER
pdf("scatter.pdf")
plot(c(rnorm(length(ILS), mean = 1, sd = 0.2), rnorm(length(EDA), mean = 5, sd = 0.2)),  c(ILS,EDA), xlim = c(0,7), xlab = "ILS                                        EDA")
dev.off()
# HISTOGRAM
nbins = 20
dataHist <- data.frame(
value=c(ILS,EDA),
type=c(rep("ILSibridoa", length(ILS)), rep("EDA",  length(EDA)))
)
fig <- ggplot(data=dataHist, aes(x=value, fill=type)) +
geom_histogram(alpha=0.65, position = 'identity', bins = nbins) +
scale_fill_manual(values=c("lightgreen", "lightpink")) +
ggplot2::xlab('fitness') +
ggplot2::ylab('frekuentzia') +
ggplot2::theme_minimal() +
labs(fill="")
ggsave("histogram.pdf", plot=fig,  width = 4, height = 2, device="pdf")
# BOXPLOT
pdf("boxplot.pdf")
boxplot(ILS, EDA, names = c("ILS", "EDA"))
dev.off()
# SIGN TEST (FOR PROBABILITY OF "ILS" > "EDA" or "EDA" > "ILS")
# Measure the number of 'non ties'
n_without_ties <- sum(sign(ILS - EDA) != 0)
# Measure the number of success
n_success <- sum(sign(ILS - EDA) == 1)
binom.test(n_success, n_without_ties, alternative = "two.sided")
# CUMULATIVE DIFFERENCE PLOT
is_minimization <- FALSE
cumulative_difference_plot(ILS, EDA,
isMinimizationProblem = is_minimization,
labelA = "ILS", labelB = "EDA", ignoreMinimumLengthCheck = TRUE)
# VIOLIN
data <- data.frame(
name <- c( rep("ILS",201), rep('EDA',201) ),
value <- c(ILS, EDA))
data <- data.frame(
name <- c( rep("ILS",len(ILS)), rep('EDA',len(EDA)) ),
value <- c(ILS, EDA))
# VIOLIN
data <- data.frame(
name <- c( rep("ILS",length(ILS)), rep('EDA',length(EDA)) ),
value <- c(ILS, EDA))
ggplot(data, aes(x=name, y=value, fill=name)) +
geom_violin()+stat_summary(fun=median, geom="point", size=2, color="black")
#DENSITY
library(ggplot2)
library(hrbrthemes)
install.packages("hrbrthemes")
# With transparency ()
p2 <- ggplot(data, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5, alpha=.4) +
theme_ipsum()
install.packages("hrbrthemes")
# With transparency ()
p2 <- ggplot(data, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5, alpha=.4) +
theme_ipsum()
library(ggplot2)
library(hrbrthemes)
# With transparency ()
p2 <- ggplot(data, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5, alpha=.4) +
theme_ipsum()
library(hrbrthemes)
install.packages("hrbrthemes")
library(hrbrthemes)
# With transparency ()
p2 <- ggplot(data, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5, alpha=.4)
# With transparency ()
ggplot(data, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5, alpha=.4)
# With transparency ()
ggplot(data, aes(x=name, group=value, fill=value)) +
geom_density(adjust=1.5, alpha=.4)
# With transparency ()
ggplot(data, aes(x=name, group=value, fill=name)) +
geom_density(adjust=1.5, alpha=.4)
df < - data.frame(
category=factor(rep(c("ILS", "EDA"), each=length(ILS))),
value=round(c(ILS, EDA))
)
df < - data.frame(
category=factor(rep(c("ILS", "EDA"), each=length(ILS))),
value=(c(ILS, EDA))
)
df < - data.frame(
category=(rep(c("ILS", "EDA"), each=length(ILS))),
value=(c(ILS, EDA))
)
df < - data.frame(
category=c( rep("ILS",length(ILS)), rep('EDA',length(EDA)) ),
value=(c(ILS, EDA))
)
df <- data.frame(
category=factor(rep(c("ILS", "EDA"), each=length(ILS))),
value=round(c(ILS, EDA))
)
ggplot(df, aes(x=value, color=category, fill=category)) +
geom_density(alpha=0.3)
df <- data.frame(
category=factor(rep(c("ILS", "EDA"), each=length(ILS))),
value=(c(ILS, EDA))
)
# load library
library(ggplot2)
# Basic density plot with custom color
# color property to determine the color of plot
# fill property to determine the color beneath plot
ggplot(df, aes(x=value, color=category, fill=category)) +
geom_density(alpha=0.3)
setwd("/home/paula/Escritorio/community detection/data")
library(RVCompare)
library(ggplot2)
csv_data <-read.csv("datuak_ils_originala_hibridoa.csv")
#ILS<- csv_data$'ILS'
#EDA<- csv_data$'EDA'
ILS <-csv_data$'ILS'
EDA <- csv_data$ILS originala''
setwd("/home/paula/Escritorio/community detection/data")
library(RVCompare)
library(ggplot2)
csv_data <-read.csv("datuak_ils_originala_hibridoa.csv")
#ILS<- csv_data$'ILS'
#EDA<- csv_data$'EDA'
ILS <-csv_data$'ILS'
EDA <- csv_data$'ILS originala'
setwd("/home/paula/Escritorio/community detection/data/EDAvsILS_50")
if (length(ILS) != length(EDA))
{
stop("length(ILS) != length(EDA)")
}
n <- length(ILS)
# SCATTER
pdf("scatter.pdf")
plot(c(rnorm(length(ILS), mean = 1, sd = 0.2), rnorm(length(EDA), mean = 5, sd = 0.2)),  c(ILS,EDA), xlim = c(0,7), xlab = "ILS                                        EDA")
csv_data <-read.csv("datuak_ils_originala_hibridoa.csv")
setwd("/home/paula/Escritorio/community detection/data")
library(RVCompare)
library(ggplot2)
csv_data <-read.csv("datuak_ils_originala_hibridoa.csv")
ILS <-csv_data$'ILS'
EDA <- csv_data$'ILS originala'
setwd("/home/paula/Escritorio/community detection/data/")
if (length(ILS) != length(EDA))
{
stop("length(ILS) != length(EDA)")
}
n <- length(ILS)
# SCATTER
pdf("scatter.pdf")
plot(c(rnorm(length(ILS), mean = 1, sd = 0.2), rnorm(length(EDA), mean = 5, sd = 0.2)),  c(ILS,EDA), xlim = c(0,7), xlab = "ILS                                        EDA")
csv_data <-read.csv("datuak_ils_originala_hibridoa.csv")
#ILS<- csv_data$'ILS'
#EDA<- csv_data$'EDA'
ILS <-csv_data$'ILS'
csv_data <-read.csv("datuak_ils_originala_hibridoa.csv")
View(csv_data)
csv_data <-read.csv("datuak_ils_originala_hibridoa.csv")
View(csv_data)
setwd("/home/paula/Escritorio/community detection/data")
library(RVCompare)
library(ggplot2)
csv_data <-read.csv("datuak_ils_originala_hibridoa.csv")
View(csv_data)
View(csv_data)
View(csv_data)
csv_data <-read.csv("datuak_ils_originala_hibridoa.csv")
#ILS<- csv_data$'ILS'
#EDA<- csv_data$'EDA'
ILS <-csv_data$'ILS'
EDA <- csv_data$'ILS originala'
csv_data <-read.csv("datuak_ils_originala_hibridoa.csv")
#ILS<- csv_data$'ILS'
#EDA<- csv_data$'EDA'
ILS <-csv_data$'ILS'
EDA <- csv_data$'ILS originala'
